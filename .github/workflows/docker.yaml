name: Docker deploy
on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Check if tag is valid
      - name: Check tag
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          if ! [[ ${{ github.ref }} =~ ^refs/tags/[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$ ]]; then
            exit 1
          fi

      # Generate metadata
      - name: Generate image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: cpsit/project-builder
          tags: |
            type=raw,value=latest,enable=${{ github.event_name != 'workflow_dispatch' }}
            type=semver,pattern={{version}}
            type=raw,value=${{ github.ref_name }},enable=${{ github.event_name == 'workflow_dispatch' }}

      # Prepare build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login at Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push image
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            PROJECT_BUILDER_VERSION=${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || '0.0.0' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
